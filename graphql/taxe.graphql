#impuestos
type Taxe{
    id:ID!
    name:String
    percentage:Int

    products:[Product]
}

type MessageSuccessTaxe {
    taxe:Taxe
    message: String
    type: String
}

extend type Query{
    taxes:[Taxe] @all(model:"App\\Taxe") @middleware(checks:["auth:api", "can:taxe.list"])
}

extend type Mutation{
    #crear impuesto
    createTaxe(
        name:String @rules(apply:["required", "unique:taxes,name"])
        percentage:Int @rules(apply:["required","integer"])
    ):MessageSuccessTaxe @field(resolver: "App\\GraphQL\\Mutations\\CreateTaxe@resolve")  @middleware(checks:["auth:api", "can:taxe.create"])

    #actualizar impuesto
    updateTaxe(
        id:ID! @rules(apply: ["required"])
        name:String! @rules(apply:["required"])
        percentage:Int! @rules(apply:["required","integer"])
    ): MessageSuccessTaxe @field(resolver: "App\\GraphQL\\Mutations\\UpdateTaxe@resolve") @middleware(checks:["auth:api", "can:taxe.edit"])
}
