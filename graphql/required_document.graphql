#Documentos requeridos
type Required_documents {
  id: ID!
  name_required_documents: String
}

type MessageSuccessRequired_documents {
    required_documents:Required_documents
    message: String
    type: String
}

extend type Query{
    #Documentos requeridos
    requiredDocument:[Required_documents] @all(model:"App\\Required_documents") @middleware(checks:["auth:api", "can:required_document.list"])
}

extend type Mutation {
    #Documentos requeridos
    createRequiredDocument(
      name_required_documents:String @rules(apply:["required", "unique:required_documents,name_required_documents"])
    ):MessageSuccessRequired_documents @field(resolver: "App\\GraphQL\\Mutations\\CreateRequiredDocument@resolve") @middleware(checks:["auth:api", "can:required_document.create"])

    updateRequiredDocument(
      id:ID!
      name_required_documents:String
    ):MessageSuccessRequired_documents @field(resolver: "App\\GraphQL\\Mutations\\UpdateRequiredDocument@resolve") @middleware(checks:["auth:api", "can:required_document.edit"])
}
