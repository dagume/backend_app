type Query {
    #me
    me: Contact @auth(guard:"api")
    #Query proyectos
    filter_name_Project(name: String! @where(operator: "like")): [Project] @all(model: "App\\Project") @middleware(checks:["auth:api"])
    filter_name_Project_paginator(name: String! @where(operator: "like")): [Project] @paginate(type: "paginator" model: "App\\Project") @middleware(checks:["auth:api"])
    project(name: String @eq id:ID @eq): Project @find(model: "App\\Project") @middleware(checks:["auth:api"])
    projects: [Project!]! @all(model: "App\\Project") @middleware(checks:["auth:api"])  #, "can:project.list"
    projects_paginator: [Project]! @paginate(type: "paginator" model: "App\\Project") @middleware(checks:["auth:api"])
    projects_with_parent(parent_project_id: Int @where(operator: "!=")): [Project!]! @all(model: "App\\Project") @middleware(checks:["auth:api"])
    projects_parent(parent_project_id: Int @where(operator: "=")): [Project!]! @all(model: "App\\Project") @middleware(checks:["auth:api"])
    projects_paginator_with_parent(parent_project_id: Int @where(operator: "!=")): [Project]! @paginate(type: "paginator" model: "App\\Project") @middleware(checks:["auth:api"])

    #Query Project_type
    filter_name_Project_type(name_project_type: String! @where(operator: "like")): [Project_type] @all(model: "App\\Project_type") @middleware(checks:["auth:api"])
    Project_type(name_project_type: String!): Project_type @find(model: "App\\Project_type") @middleware(checks:["auth:api"])
    Projects_type: [Project_type!]! @all(model: "App\\Project_type") @middleware(checks:["auth:api"])

    #Query Contacts
    filter_name_contact(name: String! @where(operator: "like")): [Contact] @all(model: "App\\User") @middleware(checks:["auth:api"])
    contact(name: String @eq id:ID @eq): Contact @find(model: "App\\User") @middleware(checks:["auth:api"])
    contacts: [Contact!]! @all(model: "App\\User")  @middleware(checks:["auth:api"])
    contacts_paginator: [Contact]! @paginate(type: "paginator" model: "App\\User") @middleware(checks:["auth:api"])

   #Query roles
    role(name: String! @eq): Role @find(model: "Caffeinated\\Shinobi\\Models\\Role") @middleware(checks:["auth:api"])
    roles: [Role!]! @all(model: "Caffeinated\\Shinobi\\Models\\Role") @middleware(checks:["auth:api"])
    roles_paginator: [Role]! @paginate(type: "paginator" model: "Caffeinated\\Shinobi\\Models\\Role") @middleware(checks:["auth:api"])

    #Query permissions
    permission(name: String! @eq): Permission @find(model: "Caffeinated\\Shinobi\\Models\\Permission") @middleware(checks:["auth:api"])
    permissions: [Permission!]! @all(model: "Caffeinated\\Shinobi\\Models\\Permission") @middleware(checks:["auth:api"])
    permissions_paginator: [Permission]! @paginate(type: "paginator" model: "Caffeinated\\Shinobi\\Models\\Permission") @middleware(checks:["auth:api"])

    #Members
    members: [Member] @paginate(type: "paginator" model: "App\\Member") @middleware(checks:["auth:api"])

    #Categories
    category(name: String! @eq id:ID @eq): Category @find(model: "App\\Category")@middleware(checks:["auth:api"])
    categories: [Category!]! @all(model: "App\\Category") @middleware(checks:["auth:api"])
    categories_paginator: [Category] @paginate(type: "paginator" model: "App\\Category")@middleware(checks:["auth:api"])

    #Products
    filter_name_product(name: String! @where(operator: "like")): [Product] @all(model: "App\\Product") @middleware(checks:["auth:api"])
    product(name: String! @eq id:ID @eq): Product @find(model: "App\\Product")@middleware(checks:["auth:api"])
    products: [Product!]! @all(model: "App\\Product")@middleware(checks:["auth:api"])
    products_paginator: [Product] @paginate(type: "paginator" model: "App\\Product")@middleware(checks:["auth:api"])

    #Orders
    filter_name_order(name: String! @where(operator: "like")): [Order] @all(model: "App\\Order") @middleware(checks:["auth:api"])
    order(state: Int! @eq): Order @find(model: "App\\Order")@middleware(checks:["auth:api"])
    orders: [Order!]! @all(model: "App\\Order")@middleware(checks:["auth:api"])
    orders_paginator: [Order] @paginate(type: "paginator" model: "App\\Order")@middleware(checks:["auth:api"])

    #Actividades
    activities_parent(parent_activity_id: Int @where(operator: "=") project_id: ID @where(operator: "=")): [Activity!]! @all(model: "App\\Activity") @middleware(checks:["auth:api"])
    activity(name: String @eq id:ID @eq): Activity @find(model: "App\\Activity") @middleware(checks:["auth:api"])

    #GlobalSearch
    #globalSearch(name: String!): [GlobalSearch]
    #Search(Keyword:String!): [GlobalSearch]
}