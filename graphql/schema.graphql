"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")
type Query

type Mutation
#import accounting_movement.graphql
#import auth.graphql
#import role.graphql
#import permission.graphql
#import project.graphql
#import product.graphql
#import project_type.graphql
#import activity.graphql
#import contact.graphql
#import member.graphql
#import category.graphql
#import order.graphql
#import document_reference.graphql
#import order_documents.graphql
#import quotation.graphql
#import detail.graphql
#import module.graphql
#import required_document.graphql
#import document_contact.graphql
#import document_rol.graphql
#import measure.graphql
#import puc.graphql
#import taxe.graphql
#import payment_agreement.graphql

#Mensaje exitoso de creacion

type MessageSuccessGeneral {
    message: String
    type:String
}

type Mutation {

    updatePassword(
        contact_id:ID!
        present_password:String!
        new_password:String!
        new_password_confirmation:String!
    ): MessageSuccessGeneral @field(resolver: "App\\GraphQL\\Mutations\\UpdatePassword@resolve")

    updatePasswordAdmin(
        contact_id:ID!
        new_password:String!
        new_password_confirmation:String!
    ): MessageSuccessGeneral @field(resolver: "App\\GraphQL\\Mutations\\UpdatePasswordAdmin@resolve")
    #upload drive
    uploadFile(
        files: [Upload] @rules(apply: ["required"])
        names:[String] @rules(apply: ["max:250", "required"])
        activity_id:Int @rules(apply: ["nullable"])
        project_id:Int @rules(apply: ["nullable"])
        con_id:Int @rules(apply: ["nullable"])
        doc_id:Int @rules(apply: ["nullable"])
        order_id:Int @rules(apply: ["nullable"])
        #drive_id:String @rules(apply: ["nullable"])
        accounting_movements_id: Int @rules(apply: ["nullable"])
    ): MessageSuccessGeneral @field(resolver: "App\\GraphQL\\Mutations\\Upload@resolve")

    uploadRequiredDocument(
        name:String @rules(apply: ["max:250", "required"]) #NO eliminarlo, lo nesecito para encontrar el aarchivo en el storage
        file: Upload @rules(apply: ["required"])
        contact_id:Int @rules(apply: ["required", "nullable"])
        doc_id:Int @rules(apply: ["required", "nullable"])
        drive_id:String @rules(apply: ["required"])
    ): MessageSuccessGeneral @field(resolver: "App\\GraphQL\\Mutations\\UploadRequiredDocument@resolve")
}
    #uploadRequiredDocument(
    #    activity_id:Int @rules(apply: ["nullable"])
    #    project_id:Int @rules(apply: ["nullable"])
    #    contact_id:Int @rules(apply: ["nullable"])
    #    accounting_movements_id: Int @rules(apply: ["nullable"])
    #    drive_id:String @rules(apply: ["required"])
    #): MessageSuccess @field(resolver: "App\\GraphQL\\Mutations\\UploadFile@resolve")

#Mensaje de creado de folder
#type MessageSuccessFolder {
#    folder: String
#}
#createFolder: MessageSuccessFolder @field(resolver: "App\\GraphQL\\Mutations\\CreateProject@resolve") @middleware(checks:["auth:api"])



#interface GlobalSearch
#    @interface(resolveType: "App\\GraphQL\\Interfaces\\GlobalSearch@resolveType"){
#    id:ID!
#    name:String!
#}
# Busqueda Global
#union GlobalSearch @union(resolveType: "App\\GraphQL\\Unions\\General@resolveType")
#    = Contact | Project
#type Query {
#GlobalSearch
#globalSearch(name: String!): [GlobalSearch]
#Search(Keyword:String!): [GlobalSearch]
#}
