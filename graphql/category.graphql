#Categorias
type Category {#implements GlobalSearch{
    id:ID!
    name:String!
    description:String
    Products:[Product]
}
extend type Query{
    #Categories
    category(name: String! @eq id:ID @eq): Category @find(model: "App\\Category")@middleware(checks:["auth:api"])
    categories: [Category!]! @all(model: "App\\Category") @middleware(checks:["auth:api"])
    categories_paginator: [Category] @paginate(type: "paginator" model: "App\\Category")@middleware(checks:["auth:api"])
}
extend type Mutation {
    #Category
    createCategory(
        name: String @rules(apply: ["required", "max:255"])
        description: String @rules(apply: ["max:255"])
    ):MessageSuccess @field(resolver: "App\\GraphQL\\Mutations\\CreateCategory@resolve") @middleware(checks:["auth:api"])
    updateCategory(
        id: ID! @rules(apply: ["required"])
        name: String @rules(apply: ["required", "max:255"])
        description: String @rules(apply: ["max:255"])
    ): Category @update(model: "App\\Category")
}
