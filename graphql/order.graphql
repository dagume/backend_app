#Ordenes
type Order{
    id:ID!
    quotations:[Quotation]
    project:Project
    contact:Contact
    details:[Detail]
    name:String
    application_date: Date
    state: Int
    description:String
    delivery_site:String
    subtotal:Int
    total:Int
    sender_data:Contact
    lat:Float
    lon:Float
    order_documents:[Order_documents]
}
#Mensaje exitoso de creacion
type MessageSuccessOrder {
    order:Order
    message: String
}
extend type Query{
    #Orders
    filter_name_order(name: String! @where(operator: "ilike")): [Order] @all(model: "App\\Order") #@middleware(checks:["auth:api"])
    order(id: ID! @eq): Order @find(model: "App\\Order") #@middleware(checks:["auth:api"])
    state_orders(project_id: Int! @eq state: Int! @eq): [Order!]! @all(model: "App\\Order") #@middleware(checks:["auth:api"])
    orders: [Order!]! @all(model: "App\\Order") #@middleware(checks:["auth:api"])
    orders_paginator: [Order] @paginate(type: "paginator" model: "App\\Order") #@middleware(checks:["auth:api"])
}
input UploadDetails {
    product_id:Int
    quantity:Float
    mea_id:Int
}
extend type Mutation {
    #CrearSolicitudCotizacon
    saveApplication(
        project_id:Int! @rules(apply: ["required","integer"])
        name: String! @rules(apply: ["required", "max:255"])
        description: String @rules(apply: ["max:255"])
        delivery_site: String @rules(apply: ["max:255"])
        lat: Float
        lon: Float
        updetails:[UploadDetails!]
        #email_contacts:[Int]
    ): MessageSuccessOrder @field(resolver: "App\\GraphQL\\Mutations\\CreateApplication@resolve") #@middleware(checks:["auth:api"])

    #GuardarYEnviarSolicitudCotizacon
    createApplication(
        project_id:Int! @rules(apply: ["required","integer"])
        name: String! @rules(apply: ["required", "max:255"])
        description: String @rules(apply: ["max:255"])
        delivery_site: String @rules(apply: ["max:255"])
        lat: Float
        lon: Float
        updetails:[UploadDetails!]
        email_contacts:[Int]
    ): MessageSuccessOrder @field(resolver: "App\\GraphQL\\Mutations\\Application_quotation@resolve") @middleware(checks:["auth:api"])

    #Enviar Correos de solicitud
    sendApplicationMail(
        order_id:Int
        email_contacts:[Int]
    ): MessageSuccessOrder @field(resolver: "App\\GraphQL\\Mutations\\SendApplicationMail@resolve") #@middleware(checks:["auth:api"])


    #updateOrder(
    #    id_order:ID! @rules(apply:["required"])
    #    id_members: Int! @rules(apply: ["required","integer"])
    #    name: String! @rules(apply: ["required", "max:255"])
    #    code: String! @rules(apply: ["required","max:255"])
    #    description: String @rules(apply: ["max:255"])
    #    date_order: Date! @rules(apply: ["required", "date", "before:tomorrow"])
    #    notes: String @rules(apply: ["max:255"])
    #): Order @update(model: "App\\Order")

}
